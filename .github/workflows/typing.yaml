---
name: Typing

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  mypy:
    name: mypy on Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.9", "3.10"]
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v3
      - name: 🏗 Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - name: 🏗 Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: ⤵️ Restore cached Python PIP packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-${{ hashFiles('.github/workflows/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-
      - name: 🏗 Install workflow dependencies
        run: |
          pip install -r .github/workflows/requirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: ⤵️ Restore cached Python virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-
      - name: 🏗 Install dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run mypy
        run: poetry run mypy forecast_solar
